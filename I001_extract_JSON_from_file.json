{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_1",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "f1abb9809453bed4f44d622c608c7afe9294c4e5",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": 419.9999999999999
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1000,
                    "y": 1000
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "get_file_information_extract_content",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "get_file_information_extract_content",
                        "id": "2",
                        "inputParameters": [
                            "playbook_input:vault_id"
                        ],
                        "outputVariables": [
                            "json_content"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in playbook_input_vault_id:\n        vault_id = playbook_input_vault_id[0]\n        success, message, vault_info = phantom.vault_info(vault_id=vault_id[0])\n        json_data = vault_info[0]\n        path = json.dumps(json_data[\"path\"]) \n        name = json.dumps(json_data[\"name\"]) \n        phantom.debug(\"path: {}\".format(path))\n        phantom.debug(\"name: {}\".format(name))\n        file_path_name = path +\"/\"+ name\n        phantom.debug(file_path_name)\n        \n        with open(file_path_name) as file:\n            data = json.load(file)\n        \n        phantom.debug(\"data: {}\".format(data))\n\n",
                    "warnings": {},
                    "x": 980,
                    "y": 560
                }
            },
            "notes": ""
        },
        "input_spec": [
            {
                "contains": [],
                "description": "",
                "name": "vault_id"
            }
        ],
        "output_spec": [
            {
                "contains": [],
                "datapaths": [
                    "get_file_information_extract_content:custom_function:json_content"
                ],
                "deduplicate": false,
                "description": "",
                "metadata": {},
                "name": "json_content"
            }
        ],
        "playbook_type": "data",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.0.2.127725"
    },
    "create_time": "2023-07-10T08:46:02.819727+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}